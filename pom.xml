<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.wlt</groupId>
  <artifactId>maven.wlt</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>maven.wlt Maven Webapp</name>
 <!-- <url>http://maven.apache.org</url>-->
  <properties>
    <slf4j.version>1.7.21</slf4j.version>
    <logback.version>1.2.3</logback.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <!--单元测试包-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <!--日志包 包含有log4j的包-->
    <!--<dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.21</version>
    </dependency>-->

    <!--log4j2的日志包 4个-->
<!--    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-web</artifactId>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-jcl</artifactId>
      <version>2.5</version>
    </dependency>-->

    <!--logback的jar包-->
    <dependency>
      <!--主要介绍的是这个jar包，这个包是负责logback随着项目启动的jar包-->
      <groupId>org.logback-extensions</groupId>
      <artifactId>logback-ext-spring</artifactId>
      <version>0.1.4</version>
    </dependency>
    <!--slf4j的jar包-->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.4</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.6.4</version>
    </dependency>
    <!--logback的jar包-->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.1.6</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-access</artifactId>
      <version>1.1.6</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.1.6</version>
    </dependency>

    <!--j2ee相关包 servlet、jsp、jstl-->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <!--编译的时候使用，设置为provided范围，目的是运行的时候不用这个jar，因为tomcat plugin也有这个jar，会冲突的-->
      <scope>provided</scope>
    </dependency>
    <!--注释掉或者限制作用范围：provided:编译时候用，不然跟tomcat plugin的jar冲突-->
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>
    <!--spring相关包-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>4.3.1.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>4.3.1.RELEASE</version>
    </dependency>
  </dependencies>

  <build>
    <finalName>springMvcMaven</finalName>
    <pluginManagement>
      <plugins>
        <!-- 配置Tomcat插件 -->
<!--      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <port>9090</port>
          <path>/</path>
          <uriEncoding>UTF-8</uriEncoding>
          <server>tomcat7</server>
        </configuration>
      </plugin>-->
        <plugin>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>8.1.5.v20120716</version>
          <configuration>
            <connectors>
              <!--<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">-->
              <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                <port>80</port> <!-- 访问端口,默认8080 -->
              </connector>
            </connectors>
            <!--　一个Jetty的端口数字，又来监听接收一个终止的命令并将其终止。-->
            <stopPort>9966</stopPort>
            <!--一个发送到stopPort端口的有效命令。-->
            <stopKey>foo</stopKey>
            <!--如果scanInterval参数设置了一个非0的数，那么Jetty将会监视你的pom.xml，WEB-INF/lib，WEB-INF/classes和WEB-INF/web.xml文件，如果检测到改变则重新部署-->
            <scanIntervalSeconds>10</scanIntervalSeconds>
            <webApp>
              <!-- web项目根路径 -->
              <contextPath>/</contextPath>
            </webApp>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
